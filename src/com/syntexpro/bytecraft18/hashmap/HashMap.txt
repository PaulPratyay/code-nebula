
                    >>Java HashMap<<

-> Java HashMap class implements the Map interface which allows us to store 'key' and 'value' pair, where 'keys' should be unique;
-> If we try to insert the duplicate key, it will replace the element of the corresponding key;
-> Its is easy to perform operations using the key index like update, deletion, etc.;
-> HashMap class is found in the java.util package;

-> HashMap in Java is like the legacy Hashtable class, but it is not synchronized;
-> It allows us to store the null elements as well, but there should be only one null key;
-> Since Java 5, it is denoted as HashMap<K, V>, where K stands for 'key' and V stands for 'value';
-> It inherits the AbstractMap class and implements the Map interface;

                    >>Points to remember<<

=> Java HashMap contains values based on the key;
=> Java HashMap contains only uniques keys;
=> Java HashMap may have one null key and multiple null values;
=> Java HashMap is not synchronized;
=> Java HashMap maintains no order;
=> The initial default capacity of Java HashMap class is 16 with a load factor of 0.75;

                    >>Hierarchy of HashMap class<<

-> MashMap class extends AbstractMap class and implements Map interface;
-> Refer to the picture present here in the hashmap package for better understanding;

                    >>HashMap class declaration<<

       public class HashMap<K,V> extends AbstractMap<K,V> implements Map<K,V>, Cloneable, Serializable

                    >>HashMap class Parameters<<

-> K: It is the type of keys maintained by this map;
-> V: It is the type of mapped values;